# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.require_version ">= 1.6.2"

Vagrant.configure("2") do |config|
  config.vm.define "win-node-1" do |node|
    node.vm.hostname = "win-node-1"
    node.vm.box = "win81/noupdates"
    node.vm.guest = :windows
    node.vm.communicator = "winrm"
    node.winrm.username = "vagrant"
    node.winrm.password = "vagrant"
    node.vm.network :forwarded_port, guest: 3389, host: 3389, id: "rdp", auto_correct: true
    node.vm.network :forwarded_port, guest: 5985, host: 5985, id: "winrm", auto_correct: true
    
    node.vm.provision :shell, inline: '$([Activator]::CreateInstance([Type]::GetTypeFromCLSID([Guid]"{DCB00C01-570F-4A9B-8D69-199FDBA5723B}"))).GetNetworkConnections() | % {$_.GetNetwork().SetCategory(1)}'
    node.vm.provision :shell, inline: 'shutdown /r /t 5 /f /d p:4:1 /c \"Vagrant Shutdown\"'
    
    node.vm.provider :vmware_workstation do |v, override|
      v.gui = true
      v.vmx["displayname"] = "win-node-1"
      v.vmx["memsize"] = "1536"
      v.vmx["numvcpus"] = "1"
      v.vmx["cpuid.coresPerSocket"] = "1"
      v.vmx["ethernet0.virtualDev"] = "vmxnet3"
      v.vmx["ethernet1.virtualDev"] = "vmxnet3"
      v.vmx["ethernet1.vnet"] = "vmnet2"
      #v.vmx["ethernet1.present"] = "FALSE"
      v.vmx["RemoteDisplay.vnc.enabled"] = "false"
      v.vmx["RemoteDisplay.vnc.port"] = "5900"
      v.vmx["scsi0.virtualDev"] = "lsisas1068"
    end
  end
end